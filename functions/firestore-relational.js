(function(t,a){typeof exports=="object"&&typeof module<"u"?a(exports,require("firebase-admin/firestore"),require("firebase-functions")):typeof define=="function"&&define.amd?define(["exports","firebase-admin/firestore","firebase-functions"],a):(t=typeof globalThis<"u"?globalThis:t||self,a(t.FirestoreRelational={},t.firebaseadminfirestore,t.firebasefunctions))})(this,function(t,a,w){"use strict";function b(n){return{collections:n}}function q(n,r={}){const o={};let c;for(const s in r){const l=r[s];l.type==="sequence-field"?c=s:o[s]=l}if(!c)throw new Error(`Your collection must include a sequence field for ordering migrations. Try adding createdAt: sequenceField() to your ${n} schema.`);return{path:n,relations:o,sequenceKey:c}}function $(){return{type:"sequence-field"}}function F(n){return{type:"has-many",...n}}function S(n){return{type:"has-one",...n}}function j(n){return{migrate:w.https.onCall(async r=>{const{collectionPath:o}=r,c=n.collections.find(({path:e})=>e===o);if(!c){const e=n.collections.map(({path:i})=>i);throw new Error(`No schema found for collection with path ${o}. Schemas found for ${e.join(",")}`)}const{path:s,relations:l,sequenceKey:d}=c,u=Object.entries(l),h=await a.getFirestore().collection(s).get();for(const e of h.docs){const i={id:e.id,...e.data()},f=await g(`${o}/${e.id}`,i,u);JSON.stringify({...i,relationData:f})!==JSON.stringify(i)&&(console.log("diff!",{data:i,relationData:f}),await a.getFirestore().doc(`${o}/${e.id}`).update(f))}return{message:"This is where we would migrate",collectionPath:o}})}}async function g(n,r,o,c){const s={};for(const[l,{type:d,localKey:u,foreignKey:h,collection:e}]of o)if(d==="has-many"){const i=r[u];if(i==null){console.warn(`Tried to set up relation between document ${n} and ${e.path} but the ${u} field was not defined.`);continue}const f=await a.getFirestore().collection(e.path).where(h,"==",i).get(),m=[];for(const y of f.docs){const p={id:y.id,...y.data()};Object.keys(e.relations).length>1&&Object.assign(p,await g(`${e.path}/${y.id}`,p,Object.entries(e.relations))),m.push(p),s[l]=m}}else d==="has-one"&&console.log("has-one not yet supported");return s}t.collection=q,t.getFirebaseFunctions=j,t.hasMany=F,t.hasOne=S,t.project=b,t.sequenceField=$,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=lib.umd.js.map
